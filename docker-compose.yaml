# @format

version: '3.8'

services:
  posbackend:
    image: docker.oneshell.in/library/posbackend:latest
    container_name: posbackend
    restart: always
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    ports:
      - '8090:8090'
    depends_on:
      - mongodb
      # - nats-server
    environment:
      - NATS_URL=${NATS_URL}
      - NATS_REMOTE_URL=nats://178.156.139.110:4222
      - SPRING_PROFILES_ACTIVE=default
      - MONGODB_URI=${MONGODB_URI}
      - JAVA_OPTS=-Xms3g -Xmx3.5g -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Xlog:gc*
    volumes:
      - /Users/manip/data/java/logs:/var/log/posbackend
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4096M
        reservations:
          cpus: '1'
          memory: 3072M
    networks:
      - app-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--spider',
          '-q',
          'http://localhost:8090/actuator/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  posNodeBackend:
    image: docker.oneshell.in/library/posnodebackend:latest
    container_name: posNodeBackend
    restart: always
    privileged: true
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    ports:
      - '3001:3001'
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
    volumes:
      - /Users/manip/data/node/logs:/var/log/posNodeBackend
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:3001/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M
        reservations:
          cpus: '0.2'
          memory: 100M

  posFrontend:
    image: docker.oneshell.in/library/pos:latest
    container_name: posFrontend
    restart: always
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    ports:
      - '80:80'
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      - posbackend
      - posNodeBackend
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
        reservations:
          cpus: '0.1'
          memory: 64M

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    volumes:
      - /Users/manip/data/mongo-data:/data/db
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    ports:
      - '27017:27017'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1536M
        reservations:
          cpus: '0.3'
          memory: 300M
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', 'db.adminCommand({ping: 1})']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # nats-server:
  #   image: docker.oneshell.in/library/nats:latest
  #   container_name: nats-server
  #   restart: always
  #   labels:
  #     - 'com.centurylinklabs.watchtower.enable=false'
  #   ports:
  #     - '4222:4222'
  #     - '8222:8222'
  #     - '8080:8080'
  #   volumes:
  #     - /Users/manip/data/nats-data:/data/jetstream
  #     - /app/repo/nats-server.conf:/nats-server.conf
  #   command: ['--config', '/nats-server.conf']
  #   environment:
  #     - JS_STORAGE_TYPE=file
  #     - JS_STORAGE_DIR=/data/jetstream
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 1024M
  #       reservations:
  #         cpus: '0.2'
  #         memory: 64M
  #   networks:
  #     - app-network
  #   logging:
  #     driver: 'json-file'
  #     options:
  #       max-size: '10m'
  #       max-file: '3'

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    environment:
      - TZ=Europe/London
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_ROLLING_RESTART=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /app/repo/config/config.json:/config.json
    command: --interval 20
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M
    networks:
      - app-network
  PosPythonBackend:
    image: docker.oneshell.in/library/pos-python-backend:latest
    container_name: PosPythonBackend
    restart: always
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    ports:
      - '5200:5100'
    volumes:
      - /Users/manip/data:/app/data
    networks:
      - app-network
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 400M
        reservations:
          cpus: '0.2'
          memory: 64M

networks:
  app-network:
    driver: bridge
